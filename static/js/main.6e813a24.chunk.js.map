{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setQuery","foundMovie","setFoundMovie","movieNotFound","setMovieNotFound","isLoading","setIsLoading","buttonDisabled","length","useEffect","handleFormSubmit","a","finally","movieData","Poster","newMovie","Title","Plot","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","disabled","cn","onClick","App","setMovie","find","film","moviesList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e813a24.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=51e093e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [movieNotFound, setMovieNotFound] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const buttonDisabled = query.length > 0;\n\n  useEffect(() => {\n    if (movieNotFound) {\n      setMovieNotFound(false);\n    }\n  }, [query]);\n\n  const handleFormSubmit = async () => {\n    setIsLoading(true);\n    try {\n      const movieData: MovieData | ResponseError = await getMovie(query)\n        .finally(() => {\n          setIsLoading(false);\n        });\n\n      if ('Title' in movieData) {\n        if (movieData.Poster === 'N/A') {\n          // eslint-disable-next-line max-len\n          movieData.Poster = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n        }\n\n        const newMovie: Movie = {\n          title: movieData.Title,\n          description: movieData.Plot,\n          imgUrl: movieData.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n          imdbId: movieData.imdbID,\n        };\n\n        setFoundMovie(newMovie);\n      } else {\n        throw Error(movieData.Error);\n      }\n    } catch (error) {\n      setMovieNotFound(true);\n    }\n  };\n\n  const addMovieToList = () => {\n    if (foundMovie) {\n      addMovie(foundMovie);\n    }\n\n    setFoundMovie(null);\n    setQuery('');\n  };\n\n  const onFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    handleFormSubmit();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n          {movieNotFound && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!buttonDisabled}\n              className={cn(\n                'button is-light disabled',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className={cn('button is-primary',\n                { 'is-hidden': !foundMovie })}\n              onClick={addMovieToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n  const addMovie = (movie: Movie) => {\n    const isMovieInList = movies.find(film => film.imdbId === movie.imdbId);\n\n    if (!isMovieInList) {\n      setMovie(moviesList => [...moviesList, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}